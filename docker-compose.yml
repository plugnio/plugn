version: '3.2'

services:
  mysql:
    image: mysql:5.7
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_DATABASE=capital
      - MYSQL_USER=capitaluser
      - MYSQL_PASSWORD=12345
    entrypoint:
      sh -c "echo 'CREATE DATABASE IF NOT EXISTS capital_test;' > /docker-entrypoint-initdb.d/init.sql;
        /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"

  redis:
    image: redis:6.2.3
    volumes:
      - redis-data:/data

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
    depends_on:
      - "mysql"

  # Start container to install composer deps and kill after
  composer-deps:
    build: investor
    command: composer install
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app

  # Start container to init dev environment and kill after
  init-environment:
    build: investor
    command: ./init --env=Development --overwrite=All
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      - "composer-deps"

  # Start container to run db migrations and kill after
  db-migration:
    build: investor
    command: bash -c "sleep 20 && ./yii migrate --interactive=0 && ./yii_test migrate --interactive=0"
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      - "init-environment"
      - "mysql"
      - "redis"
      - "composer-deps"

  cron:
    build: cron
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      - "db-migration"

  investor-api:
    build: investor
    ports:
      - 20080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      - "cron"

  backend:
    build: backend
    ports:
      - 21080:80
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
    depends_on:
      - "cron"

volumes:
  mysql-data:
  redis-data:
